version: 2

jobs:
  build:
    docker:
      - image: nixos/nix:2.1.3
    steps:
      - checkout
      - run:
          name: Add ca-certificates
          command: |
            apk --no-progress update
            apk --no-progress add ca-certificates
      - run:
          name: Setup Cachix
          command: |
            nix-env -f nix/nixpkgs/ -iA cachix
            USER=dummy cachix use mrkkrp
      - run:
          name: Build environment
          command: |
            nix-shell --pure --run :
            nix-build nix/texlive-custom
            nix-build nix/html5validator
      - run:
          name: Push Cachix
          command: |
            nix-store -qR --include-outputs $(nix-instantiate default.nix) | cachix push mrkkrp
            nix-store -qR --include-outputs $(nix-instantiate nix/texlive-custom) | cachix push mrkkrp
            nix-store -qR --include-outputs $(nix-instantiate nix/html5validator) | cachix push mrkkrp
      - run: nix-build -o mk-com
      - run: nix-shell --run "./mk-com/bin/mk-com clean"
      - run: nix run -f nix/texlive-custom -c pdflatex -output-directory resume/ resume/resume.tex
      - run: nix-shell --run "./mk-com/bin/mk-com"
      - run: nix-build nix/html5validator -o html5validator
      - run: nix run -f nix/nixpkgs openjdk -c ./html5validator/bin/html5validator --root _build/ --show-warnings
      - persist_to_workspace:
          root: ~/project
          paths:
            - _build

  deploy:
    docker:
      - image: nixos/nix:2.1.3
    steps:
      - checkout
      - run:
          name: Add ca-certificates
          command: |
            apk --no-progress update
            apk --no-progress add ca-certificates
      - attach_workspace:
          at: /tmp
      - run:
          name: Copy to the droplet with rsync
          command: nix run -f nix/nixpkgs rsync openssh -c rsync -avz -e "ssh -p 2555 -o \"StrictHostKeyChecking no\"" /tmp/_build/ admin@markkarpov.com:/home/admin/markkarpov.com

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          context: org-global
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
